//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by FastGenericNew.SourceGenerator
//     Please do not modify this file directly
// <auto-generated/>
//------------------------------------------------------------------------------
#nullable enable
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Diagnostics.CodeAnalysis;
using System.Reflection;
using System.ComponentModel;

namespace @FastGenericNew
{
	public static partial class FastNew<T>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, Type.EmptyTypes, null);
	}
	public static partial class FastNew<T, TArg0>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
			typeof(TArg10),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
			typeof(TArg10),
			typeof(TArg11),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
			typeof(TArg10),
			typeof(TArg11),
			typeof(TArg12),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
			typeof(TArg10),
			typeof(TArg11),
			typeof(TArg12),
			typeof(TArg13),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
			typeof(TArg10),
			typeof(TArg11),
			typeof(TArg12),
			typeof(TArg13),
			typeof(TArg14),
		}, null);
	}
	public static partial class FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>
	{
		/// <summary>
		/// The constructor of <typeparamref name="T" /> with given arguments. <br/>
		/// Could be <see langword="null" /> if the constructor couldn't be found.
		/// </summary>
		public static readonly ConstructorInfo? Constructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]
		{
			typeof(TArg0),
			typeof(TArg1),
			typeof(TArg2),
			typeof(TArg3),
			typeof(TArg4),
			typeof(TArg5),
			typeof(TArg6),
			typeof(TArg7),
			typeof(TArg8),
			typeof(TArg9),
			typeof(TArg10),
			typeof(TArg11),
			typeof(TArg12),
			typeof(TArg13),
			typeof(TArg14),
			typeof(TArg15),
		}, null);
	}
}
